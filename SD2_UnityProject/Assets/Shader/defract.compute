#pragma kernel CSMain

Texture2D<float4> reader; 
Texture2D<float4> reader2;
Texture2D<float4> reader3;
RWTexture2D<float4> writer;
SamplerState _LinearClamp;
float _time;
float _taille;
float _forme;
float _disparition;
float _resx;
float _resy;
float _spectrum;

float2 rd(float t) { return frac(sin(float2(dot(floor(t), 45.23), dot(floor(t), 98.236)))*7845.236) - 0.5; }

float2 no(float t) { return lerp(rd(t), rd(t + 1.), smoothstep(0., 1., frac(t))); }


[numthreads(8,8,1)]


void CSMain (uint2 id : SV_DispatchThreadID) 
{
	
	float2 f = float2(id.x,id.y);
	float2 res=float2(_resx, _resy);
	float2 uv = f / res;


	float3 t1 = reader2.SampleLevel(_LinearClamp,uv + 0.5 / res, 0).xyz;
	float3 c1 = t1;
	float ang = 0.2;
	for (int i = 0; i < 6; i++) {
		float3 t2 = reader2.SampleLevel(_LinearClamp, uv + no(i + _time * 0.05)*ang + 0.5 / res, 0).xyz;
		float3 t3 = reader3.SampleLevel(_LinearClamp, uv + no(i + 123. + _time * 0.05)*ang + 0.5 / res, 0).xyz;
		c1 = lerp(c1, t2, smoothstep(0.5, 0., t3.xyz));
	}
	

	writer[id] = float4(float3(smoothstep(-0.08, 0.95, c1 + float3(0.1, 0.05, 0.05))) , 1.);



	


}
