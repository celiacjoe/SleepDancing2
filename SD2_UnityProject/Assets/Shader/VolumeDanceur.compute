#pragma kernel CSMain

Texture2D<float4> reader;
Texture2D<float4> reader2;
Texture2D<float4> reader3;
RWTexture2D<float4> writer;

SamplerState _LinearClamp;
float _time;
float _taille;
float _forme;
float _disparition;

float _resx;
float _resy;

float desaturate(float3 color)
{
	float3 lum = float3(0.299, 0.587, 0.114);
	float v1 = dot(lum, color);

	return v1;
}

[numthreads(8,8,1)]
void CSMain(uint2 id : SV_DispatchThreadID)
{

	float2 f = float2(id.x, id.y);
	float2 res = float2(_resx, _resy);
	float2 uv = f / res;

	float vid = smoothstep(_taille,1.,desaturate(reader2.SampleLevel(_LinearClamp, uv + 0.5 / res, 0).xyz));
	float prev = reader.SampleLevel(_LinearClamp, uv + 0.5 / res, 0).a;

	float diff = abs(vid - prev);


	diff = smoothstep(0.2, 1., diff);
	//diff = max(diff, reader.SampleLevel(_LinearClamp, uv + 0.5 / res, 0).a*0.98);

	float Pi = 6.28318530718;

	/*float Directions = 12.;
	float Quality = 3.0;
	float t = 20.*_taille;*/
	float3 tn = reader3.SampleLevel(_LinearClamp, f / float2(1024., 10224.) + 548. + 0.5 / res, 0).xyz;
	//float Size = pow(length(uv.y - 0.5)*2., 2.)*t + tn.x*t + 1.*t;


	//float2 Radius = Size / res;
	//float3 col = reader.SampleLevel(_LinearClamp, uv+tn.xy*0.01 + 0.5 / res, 0).xyz;
	/*for (float d = 0.0; d < Pi; d += Pi / Directions)
	{
		for (float i = 1.0 / Quality; i <= 1.0; i += 1.0 / Quality)
		{
			col += reader.SampleLevel(_LinearClamp, uv + float2(cos(d), sin(d))*Radius*i + 0.5 / res, 0).xyz;
		}
	}
	col /= Quality * Directions - 11.;*/
	float3 bb = pow(smoothstep(0., 1., diff), 0.5)*max(reader2.SampleLevel(_LinearClamp, uv + 0.5 / res, 0).xyz,_forme);
	float m1 = max(bb, reader.SampleLevel(_LinearClamp, uv + float2(-1.,-1.)*(reader.SampleLevel(_LinearClamp, uv + 0.5 / res, 0).x - 0.5)*0.01 + 0.5 / res, 0).x*0.99);
	float2 pos = f;
	float ang = (m1)*1.5;
	float2 v = float2(0.,0.);
	float2x2 m = float2x2(cos(ang), sin(ang), -sin(ang), cos(ang));
	float2 b = float2(cos(ang), sin(ang));
	float2 p = b;
	p =mul(p,m);
	p *= (tn.y*1. + 0.5);
	pos = pos + p;
	float rot = 0.;
	rot += dot(reader.SampleLevel(_LinearClamp, frac((pos + p) / res) + 0.5 / res, 0).xx - 0.5, p.yx);
	v += p.yx*rot / dot(b, b)*(diff)*5.;
	float3 t1 = reader.SampleLevel(_LinearClamp, frac((pos + v * float2(-2, 2)) / res) + 0.5 / res, 0).xyz;
	float3 t2 = max(t1*(1.- _disparition*0.1), bb);
	/*float3 t3 = float pp = pow(length(uv.y - 0.5)*2., 2.);
	float c1 = min(col.x, (1. - col.z*0.05));
	vec3 c2 = mix(vec3(1.), 3.*abs(1. - 2.*fract((1. - c1)*mix(0.2, 0.5, pp) + 0.5 + vec3(0., -1. / 3., 1. / 3.))) - 1., 0.1)*pow(c1, mix(1., 2., pp));*/
	writer[id] = float4(float3(t2), lerp(prev, vid, 0.016));

}
