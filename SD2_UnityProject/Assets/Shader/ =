#pragma kernel CSMain

//Texture2D<float4> reader; 
//Texture2D<float4> reader2;
RWTexture2D<float4> writer;
//RWTexture2D<float4> writer2;
SamplerState _LinearClamp;
float _Low;
float _SLow;
float _TLow;
float _Mid;
float _SMid;
float _TMid;
float _High;
float _SHigh;
float _THigh;
float _resx;
float _resy;
//float _spectrum;


float4 rd(float p) {
	p = floor(p);
	return frac(sin(float4(dot(p, 45.), dot(p, 98.), dot(p, 632.),
		dot(p, 144.)))*7845.236);
}
float4 no(float p) { return lerp(rd(p), rd(p + 1.), frac(p)); }
float rd1(float p) {
	p = floor(p);
	return frac(sin(dot(p, 45.45))*7845.236);
}
float no1(float p) { return lerp(rd1(p), rd1(p + 1.), frac(p)); }
float3 lensflares(float2 uv, float2 pos,float tt, float ti)
{
	float2 main = uv - pos;
	float2 uvd = uv * (length(uv));

	float ang = atan2(main.y, main.x);
	float dist = length(main);
	dist = pow(dist, 0.1);

	float r1 = 0.;
	float r2 = 0.;
	float r3 = 0.;
	float2 uvx = uv;

	float tt2 = frac(tt);

	for (int i = 0; i < 8; i++) {
		float vv = 1.;
		float4 ra = no(float(i + 5)*26. + ti * 0.1);
		float4 ra2 = ra * float4(0.6, 0.8, 7., 2.);
		float4 ra3 = ra * float4(20., 2.5, 0.5, 2.);
		float4 ra4 = no(float(i + 24)*26. + ti * 0.1 + 0.5);

		uvx = lerp(lerp(uv*lerp(1., ra4.x, smoothstep(0.4, 0.6, ra4.a)),
			uvx*pow(ra4.y, 2.), ra4.z), uvd, -ra2.a);
		if (i == int(tt) - 1) { vv = tt2; }
		else { vv = 1.; }
		r1 += max(0.01 - pow(length(uvx + ra2.x*pos), pow(ra2.z, 0.8)), .0)*6.0*vv;
		r2 += max(0.01 - pow(length(uvx + (ra2.x + ra2.y)*pos), pow(ra2.z, 0.8)), .0)*5.0*vv;
		r3 += max(0.01 - pow(length(uvx + (ra2.x + ra2.y*2.)*pos), pow(ra2.z, 0.8)), .0)*3.0*vv;
		r1 += max(1.0 / (1.0 + 32.0*pow(length(uvx + ra3.x*pos), ra3.y)), .0)*0.25*vv;
		r2 += max(1.0 / (1.0 + 32.0*pow(length(uvx + (ra3.x + ra3.z)*pos), ra3.y)), .0)*0.23*vv;
		r3 += max(1.0 / (1.0 + 32.0*pow(length(uvx + (ra3.x + ra3.z*2.)*pos), ra3.y)), .0)*0.21*vv;
	}

	return float3(r1, r2, r3);
}


[numthreads(8,8,1)]
void CSMain (uint2 id : SV_DispatchThreadID) 
{
	
	float2 g = float2(id.x,id.y);
	float2 res=float2(_resx, _resy);
	float2 uv = g / res;
	uv = (uv - .5)*2.;
	uv.x *= _resx / _resy;
	float3 flare = lensflares(uv*(2.-no1(_THigh*0.1+46.)), (float2(no1(_TLow*0.01 + 596.)*0.25 + 0.25, no1(_TLow*0.01 + 475.)*0.2+0.25)-0.5)*2.,clamp(_SLow*120.,0.,120.),_TMid);

	float3 col = smoothstep(-0.0, 0.9, pow(flare, float3(0.5, 0.5, 0.5)));
	writer[id] = float4(col, 0.);
	


}
